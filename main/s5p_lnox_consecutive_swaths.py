'''
INPUT:
    - S5P (TROPOPMI) product files generated by `s5p_lnox_main.py`
OUTPUT:
    CSV file which contain the paths of consecutive swath data
UPDATE:
    Xin Zhang:
       2022-05-19: Basic version
'''


import logging
import os
from glob import glob
from itertools import groupby

import pandas as pd

from s5p_lnox_utils import Config

logging.basicConfig(level=logging.INFO)


def main():
    # get all filenames based on requested date range
    pattern = os.path.join(clean_dir, '{}{:02}', 'S5P_*_L2__NO2____{}{:02}{:02}T*')
    filelist = sum([glob(pattern.format(date.year, date.month, date.year, date.month, date.day)) for date in req_dates], [])

    # get the basenames of the filelist
    basenames = list(sorted(map(os.path.basename, filelist)))

    # group basenames by consecutive swath number
    #   https://stackoverflow.com/q/72035356/7347925
    consecutive_swaths = []
    for _, g in groupby(enumerate(basenames), lambda k: int(k[1].split('_')[-3]) - k[0]):
        consecutive_swaths.append([os.path.join(clean_dir, v.split('_')[-5][:6], v) for _, v in g])

    # drop list length equal to 1 (only one single swath is available)
    consecutive_swaths = [t for t in consecutive_swaths if len(t) > 1]
    logging.info(f'Found {len(consecutive_swaths)} consecutive swaths.')

    # merge all lists into one and save to csv file line by line
    concat_list = [j for i in consecutive_swaths for j in i]
    df = pd.DataFrame(concat_list)
    df.to_csv('consecutive_swaths.csv', index=False, header=None)


if __name__ == '__main__':
    # read config file
    cfg = Config('settings.txt')
    logging.info(cfg)

    overwrite = cfg.get('overwrite', 'True') == 'True'
    clean_dir = cfg['output_data_dir'] + '/clean_lightning/'  # directory where clean lightning cases are saved

    # generate data range
    req_dates = pd.date_range(start=cfg['start_date'],
                              end=cfg['end_date'],
                              freq='D')

    main()
