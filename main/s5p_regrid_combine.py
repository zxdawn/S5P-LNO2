'''
INPUT:
    - S5P (TROPOPMI) regridded L2 product files generated by `s5p_regrid.py`
OUTPUT:
   One combined NetCDF file
UPDATE:
    Xin Zhang:
        2022-09-04: basic version
'''


import os
import xarray as xr


tropomi_dir = './tropomi_regrid_qa75/'
savedir = './tropomi_regrid_combine/'

def get_all_filePaths(folderPath):
    result = []
    for dirpath, dirnames, filenames in os.walk(folderPath):
        result.extend([os.path.join(dirpath, filename) for filename in filenames])
    return result

def preproc(ds):
    '''Add the time dimension/coordinate'''
    ds = ds.assign_coords({'time': ds['datetime_start']})
    return ds

filelist = get_all_filePaths(tropomi_dir)

ds = xr.open_mfdataset(filelist, concat_dim='time', combine='nested', preprocess=preproc, parallel=True)
no2 = ds['tropospheric_NO2_column_number_density']
sza = ds['solar_zenith_angle']

# subset the valid no2
no2 = no2.where(sza<80)

print(no2)

# export to netcdf file
savename = savedir+'/regrid_no2_qa75.nc'
print(f'Export the NO2 data to {savename}')
no2.to_netcdf(savename)


'''
# sort data by time
ds = xr.open_dataset('./tropomi_regrid_combine//regrid_no2.nc').sortby('time')

# daily mean
vcd_mean = ds['tropospheric_NO2_column_number_density'].mean(dim='time')
# daily max
vcd_max = ds['tropospheric_NO2_column_number_density'].resample(time='1D').max()

# rename data
vcd_mean = vcd_mean.rename('vcd_mean')
vcd_max = vcd_max.rename('vcd_max')

# convert unit
vcd_mean *= 1e6
vcd_max *= 1e6
vcd_mean.attrs['units'] = 'umol m-2'
vcd_max.attrs['units'] = 'umol m-2'

# merge and export
output = xr.merge([vcd_mean, vcd_max])
output.to_netcdf('./tropomi_regrid_combine/regrid_no2_stats.nc')
'''
